?quantile
?IQR
reds <- read.csv('wineQualityReds.csv')
setwd("/Users/casimircompaore/Documents/udacity/DataAnalysisR/Project/Data")
reds <- read.csv('wineQualityReds.csv')
IQR(reds$fixed.acidity)
summary(reds$fixed.acidity)
IQR(reds$fixed.acidity)
summary(reds$fixed.acidity)
#Calcuting the interquatile range
IQR(reds$fixed.acidity)
p1 <- qplot(x = fixed.acidity, data = reds, , binwidth=.2)
p2 <- qplot(x = log10(fixed.acidity), data = reds, , binwidth=.05)
grid.arrange(p1, p2, ncol = 2)
summary(reds$fixed.acidity)[0]
summary(reds$fixed.acidity)
summary(reds$fixed.acidity)[1]
c <- c(1,2,3)
names(c) <- c('a','b','c')
c
getOutlierExtremes <- function(feature, ){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], weakLow, strongLow, weakHigh, strongHigh)
names(c) <- c('1st Qu.','3rd Qu.','Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (c)
}
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], weakLow, strongLow, weakHigh, strongHigh)
names(c) <- c('1st Qu.','3rd Qu.','Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (c)
}
getOutlierExtremes(reds$fixed.acidity)
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], weakLow, strongLow, weakHigh, strongHigh)
#names(c) <- c('1st Qu.','3rd Qu.','Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (c)
}
getOutlierExtremes(reds$fixed.acidity)
getOutlierExtremes(reds$fixed.acidity)
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], weakLow, strongLow, weakHigh, strongHigh)
#names(c) <- c('1st Qu.','3rd Qu.','Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (values)
}
getOutlierExtremes(reds$fixed.acidity)
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], weakLow, strongLow, weakHigh, strongHigh)
names(values) <- c('1st Qu.','3rd Qu.','Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (values)
}
getOutlierExtremes(reds$fixed.acidity)
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(desc[2], desc[5], iqr, weakLow, strongLow, weakHigh, strongHigh)
names(values) <- c('1st Qu.','3rd Qu.', 'IQR', 'Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (values)
}
getOutlierExtremes(reds$fixed.acidity)
summary(reds$fixed.acidity)
getOutlierExtremes <- function(feature){
desc <- summary(feature)
#Calcuting the interquatile range
iqr <- IQR(feature)
#Weak outliers extremes
weakLow <- desc[2] - (1.5 * iqr)
weakHigh <- desc[5] + (1.5 * iqr)
#Strong outliers extremes
strongLow <- desc[2] - (3 * iqr)
strongHigh <- desc[5] + (3 * iqr)
values <- c(iqr, weakLow, strongLow, weakHigh, strongHigh)
names(values) <- c('IQR', 'Weak Low Ext.','Strong Low Ext.','Weak High Ext.','Strong High Ext.')
return (values)
}
summary(reds$fixed.acidity)
getOutlierExtremes(reds$fixed.acidity)
summary(reds$fixed.acidity)
getOutlierExtremes(reds$fixed.acidity)
summary(reds$volatile.acidity)
getOutlierExtremes(reds$volatile.acidity)
summary(reds$citric.acid)
getOutlierExtremes(reds$citric.acid)
summary(reds$residual.sugar)
getOutlierExtremes(reds$residual.sugar)
summary(reds$chlorides)
getOutlierExtremes(reds$chlorides)
summary(reds$free.sulfur.dioxide)
getOutlierExtremes(reds$free.sulfur.dioxide)
summary(reds$total.sulfur.dioxide)
getOutlierExtremes(reds$total.sulfur.dioxide)
summary(reds$density)
getOutlierExtremes(reds$density)
summary(reds$pH)
getOutlierExtremes(reds$pH)
summary(reds$sulphates)
getOutlierExtremes(reds$sulphates)
summary(reds$alcohol)
getOutlierExtremes(reds$alcohol)
summary(reds$quality)
getOutlierExtremes(reds$quality)
p1 <- qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
p1
p1 <- qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
p1
p1 <- qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
qualityAndInput <- function(x_axis, y_axis, d, xlab, ylab){
p <- ggplot(aes(x = x_axis, y = y_axis), data = d, environment = environment()) +
xlab(label = xlab) +
ylab(label = ylab) +
geom_boxplot()
return (p)
}
p1 <- qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
p1
p1 <- qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
library(ggplot2)
qualityAndInput(factor(reds$quality), reds$fixed.acidity, reds, "quality", "fixed.acid")
qualityAndInput(factor(reds$quality), reds$volatile.acidity, reds, "quality", "volatile.acidity")
qualityAndInput(factor(reds$quality), reds$citric.acid, reds, "quality", "citric.acid")
qualityAndInput(factor(reds$quality), reds$residual.sugar, reds, "quality", "residual.sugar")
qualityAndInput(factor(reds$quality), reds$chlorides, reds, "quality", "chlorides")
qualityAndInput(factor(reds$quality), reds$free.sulfur.dioxide, reds, "quality", "free.sulfur.dioxide")
p7 <- qualityAndInput(factor(reds$quality), reds$total.sulfur.dioxide, reds, "quality", "total.sulfur.dioxide")
p7
qualityAndInput(factor(reds$quality), reds$density, reds, "quality", "density")
qualityAndInput(factor(reds$quality), reds$pH, reds, "quality", "pH")
qualityAndInput(factor(reds$quality), reds$sulphates, reds, "quality", "sulphates")
qualityAndInput(factor(reds$quality), reds$alcohol, reds, "quality", "alcohol")
reds_tmp = reds[,2:13]
colnames(reds_tmp) = c("Fix.A", "Vol.A", "Citric", "Sugar", "CI",
"Free.SO2", "SO2", "Density", "pH", "SO4", "Alc", "Q")
ggpairs(reds_tmp,  params=list(size=1)) +
theme(axis.text = element_blank())
library(GGally)
reds_tmp = reds[,2:13]
colnames(reds_tmp) = c("Fix.A", "Vol.A", "Citric", "Sugar", "CI",
"Free.SO2", "SO2", "Density", "pH", "SO4", "Alc", "Q")
ggpairs(reds_tmp,  params=list(size=1)) +
theme(axis.text = element_blank())
cor.test(reds$quality, reds$volatile.acidity, reds[rating == 'bad'])
cor.test(reds$quality, reds$volatile.acidity, reds[reds$rating == 'bad'])
cor.test(reds$quality, reds$volatile.acidity, subset(reds, reds$rating == 'bad'))
cor.test(reds$quality, reds$volatile.acidity)
reds$rating <- ifelse(reds$quality < 5, 'bad',
ifelse(reds$quality < 7, 'average', 'good'))
reds$rating <- ordered(reds$rating, levels = c('bad', 'average', 'good'))
bads <- subset(reds, reds$rating == 'bad')
bads
cor.test(bads$quality, bads$volatile.acidity, method = 'pearson')
goods <- subset(reds, reds$rating == 'good')
cor.test(goods$quality, goods$volatile.acidity, method = 'pearson')
cor.test(goods$quality, goods$alcohol, method = 'pearson')
cor.test(goods$quality, goods$volatile.acidity, method = 'pearson')
cor.test(goods$quality, goods$alcohol, method = 'pearson')
cor.test(goods$quality, goods$pH, method = 'pearson')
cor.test(bads$quality, bads$alcohol, method = 'pearson')
averages <- subset(reds, reds$rating == 'average')
cor.test(averages$quality, averages$volatile.acidity, method = 'pearson')
cor.test(averages$quality, averages$alcohol, method = 'pearson')
bads <- subset(reds, reds$rating == 'bad')
cor.test(bads$quality, bads$volatile.acidity, method = 'pearson')
cor.test(bads$quality, bads$alcohol, method = 'pearson')
goods <- subset(reds, reds$rating == 'good')
cor.test(goods$quality, goods$volatile.acidity, method = 'pearson')
cor.test(goods$quality, goods$alcohol, method = 'pearson')
cor.test(averages$quality, averages$volatile.acidity, method = 'pearson')
cor.test(averages$quality, averages$alcohol, method = 'pearson')
cor.test(averages$quality, averages$volatile.acidity, method = 'pearson')
cor.test(averages$quality, averages$volatile.acidity, method = 'pearson')
cor.test(averages$quality, averages$alcohol, method = 'pearson')
cor.test(averages$quality, averages$volatile.acidity, method = 'pearson')
goods <- subset(reds, reds$rating == 'good')
cor.test(goods$quality, goods$volatile.acidity, method = 'pearson')
cor.test(goods$quality, goods$alcohol, method = 'pearson')
cor.test(reds$quality, reds$volatile.acidity, method = 'pearson')
cor.test(reds$quality, reds$volatile.acidity, method = 'pearson')
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.08, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.1, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$alcohol , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.3, position="fill") +
ggtitle("Histogram of Wine alcohol") +
xlab("Acolhol") + ylab("Percent (count)") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$alcohol , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=1, position="fill") +
ggtitle("Histogram of Wine alcohol") +
xlab("Acolhol") + ylab("Percent (count)") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$alcohol , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=1, position="fill") +
ggtitle("Histogram of Wine alcohol") +
xlab("Acolhol[%]") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- subset(reds, reds$rating != 'average')
cor.test(goodOrBads$quality, goodOrBads$volatile.acidity, method = 'pearson')
cor.test(goodOrBads$quality, goodOrBads$alcohol, method = 'pearson')
cor.test(goodOrBads$quality, goodOrBads$volatile.acidity, method = 'pearson')
cor.test(goodOrBads$quality, goodOrBads$alcohol, method = 'pearson')
ggplot(data= subset(reds, reds$rating != 'average'), aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
subset(reds, reds$rating != 'average')
ggplot(data= subset(reds, reds$rating != 'average'), aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar( binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
ggplot(subset(reds, reds$rating != 'average'), aes(x=reds$volatile.acidity, fill=rating)) +
geom_bar(position="fill")
ggplot(subset(reds, reds$rating != 'average'), aes(x=reds$volatile.acidity, fill=reds$rating)) +
geom_bar(position="fill")
ggplot(data = subset(reds, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data= subset(reds, rating != 'average'), aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
ggplot(data = subset(reds, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(reds, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_bar() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = subset(reds, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_histogram() +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data= subset(reds, rating != 'average'), aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- subset(reds, rating != 'average')
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- data.frame(subset(reds, rating != 'average'))
goodOrBads
ggplot(data= reds, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- data.frame(subset(reds, rating != 'average'))
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(x=reds$volatile.acidity, y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
View(goodOrBads)
library(reshape2)
goodOrBads$X = rownames(goodOrBads)
View(goodOrBads)
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(x=reds$volatile.acidity, y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- data.frame(subset(reds, rating != 'average'))
goodOrBads$id <- rownames(goodOrBads)
View(goodOrBads)
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(x=reds$volatile.acidity, y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
goodOrBads <- data.frame(subset(reds, rating != 'average'))
goodOrBads$X <- rownames(goodOrBads)
ggplot(data= goodOrBads, aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
nrow(goodOrBads)
View(goodOrBads)
ggplot(data= goodOrBads[2:14], aes(x=reds$volatile.acidity , fill = reds$rating)) +
geom_bar(aes(y=..count../sum(..count..)), binwidth=.2, position="fill") +
ggtitle("Histogram of Wine volatile acidity") +
xlab("volatile acidity") + ylab("Percent (count per rating)") +
scale_fill_discrete(name="Quality rating")
View(goodOrBads)
goodOrBads <- subset(reds, rating != 'average')
qualityAndInput(factor(goodOrBads$quality), goodOrBads$alcohol, goodOrBads, "quality", "alcohol")
goodOrBads <- subset(reds, rating != 'average')
qualityAndInput(factor(goodOrBads$quality), goodOrBads$volatile.acidity, goodOrBads, "quality", "alcohol")
ggplot(data = subset(reds, rating != 'average'),
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
ggplot(data = goodOrBads,
aes(x = volatile.acidity, y = alcohol,
color = rating)) +
geom_point() +
geom_smooth(method = lm, se = FALSE) +
ggtitle('Alcohol vs. Volatile Acidity and Wine Quality') +
xlab('Volatile Acidity (g / dm^3)') +
ylab('Alcohol (% volume)')
m1 <- lm(quality ~ alcohol, data = subset(reds, rating != 'average'))
m2 <- update(m1, ~ . + volatile.acidity)
m3 <- update(m2, ~ . + pH)
m4 <- update(m3, ~ . + sulphates)
mtable(m1, m2, m3)
